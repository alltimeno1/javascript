// https://programmers.co.kr/learn/courses/30/lessons/42586?language=javascript

function solution(progresses, speeds) {
    let days = progresses.map((work, idx) => Math.ceil((100 - work) / speeds[idx]));
    let answer = [0];
    let firstProgress = days[0];
    
    for (let i = 0, j = 0; i < days.length; i++) {
        if (days[i] <= firstProgress) {
            answer[j] += 1;
        } else {
            firstProgress = days[i];
            answer[++j] = 1;
        }
    }
    
    return answer;
}

// https://programmers.co.kr/learn/courses/30/lessons/42587?language=javascript

function solution(priorities, location) {
    let list = priorities.map((priority, location) => ({ priority, location }))
    let result = [];
    
    while (list.length) {
        const firstItem = list.shift();
        
        if (list.find(item => item.priority > firstItem.priority)) {
            list.push(firstItem)
        } else {
            result.push(firstItem);
        }
    }
    
    const answer = result.findIndex((item) => item.location === location) + 1;
    
    return answer;
}
